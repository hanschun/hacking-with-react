'use strict';var _react = require('react');var _react2 = _interopRequireDefault(_react);var _reactDom = require('react-dom');var _reactDom2 = _interopRequireDefault(_reactDom);var _reactAddonsTestUtils = require('react-addons-test-utils');var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}jest.autoMockOff();





var Detail = require('../src/pages/Detail').default;

describe('Detail', function () {
  it('starts with zero commits', function () {
    var rendered = _reactAddonsTestUtils2.default.renderedIntoDocument(
    _react2.default.createElement(Detail, { params: { repo: '' } }));

    expect(rendered.state.commits.length).toEqual(0);});

  it('shows commits by default', function () {
    var rendered = _reactAddonsTestUtils2.default.renderedIntoDocument(
    _react2.default.createElement(Details, { params: { repo: '' } }));

    expect(rendered.state.model).toEqual('commits');});

  it('shows forks when the button is tapped', function () {
    var rendered = _reactAddonsTestUtils2.default.renderedIntoDocument(
    _react2.default.createElement(Detail, { params: { repo: '' } }));


    var forksButton = rendered.refs.forks;
    _reactAddonsTestUtils2.default.Simulate.click(forksButton);
    expect(rendered.state.model).toEqual('forks');});

  it('fetches forks from GitHub', function () {
    var rendered = _reactAddonsTestUtils2.default.renderedIntoDocument(
    _react2.default.createElement(Detail, { params: { repo: 'react' } }));

    waitsFor(function () {
      return rendered.state.forks.length > 0;}, 
    "commits to be set", 2000);
    runs(function () {
      expect(rendered.state.forks.length).toEqual(30);});});


  it('fetches forks from a local source', function () {
    var rendered = _reactAddonsTestUtils2.default.renderIntoDocument(
    _react2.default.createElement(Detail, { params: { repo: '' } }));

    var testData = require('./forks.json');
    rendered.setState({ 'mode': 'forks', forks: testData });
    expect(rendered.state.forks.length).toEqual(30);});});